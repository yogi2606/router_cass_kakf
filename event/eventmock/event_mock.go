// Code generated by MockGen. DO NOT EDIT.
// Source: Ievent.go

package eventmock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockKafkaInterface is a mock of KafkaInterface interface
type MockKafkaInterface struct {
	ctrl     *gomock.Controller
	recorder *MockKafkaInterfaceMockRecorder
}

// MockKafkaInterfaceMockRecorder is the mock recorder for MockKafkaInterface
type MockKafkaInterfaceMockRecorder struct {
	mock *MockKafkaInterface
}

// NewMockKafkaInterface creates a new mock instance
func NewMockKafkaInterface(ctrl *gomock.Controller) *MockKafkaInterface {
	mock := &MockKafkaInterface{ctrl: ctrl}
	mock.recorder = &MockKafkaInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockKafkaInterface) EXPECT() *MockKafkaInterfaceMockRecorder {
	return _m.recorder
}

// SendDataToKafka mocks base method
func (_m *MockKafkaInterface) SendDataToKafka(byteArr []byte) {
	_m.ctrl.Call(_m, "SendDataToKafka", byteArr)
}

// SendDataToKafka indicates an expected call of SendDataToKafka
func (_mr *MockKafkaInterfaceMockRecorder) SendDataToKafka(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "SendDataToKafka", reflect.TypeOf((*MockKafkaInterface)(nil).SendDataToKafka), arg0)
}

// ReceiveDataFromKafka mocks base method
func (_m *MockKafkaInterface) ReceiveDataFromKafka() {
	_m.ctrl.Call(_m, "ReceiveDataFromKafka")
}

// ReceiveDataFromKafka indicates an expected call of ReceiveDataFromKafka
func (_mr *MockKafkaInterfaceMockRecorder) ReceiveDataFromKafka() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "ReceiveDataFromKafka", reflect.TypeOf((*MockKafkaInterface)(nil).ReceiveDataFromKafka))
}
